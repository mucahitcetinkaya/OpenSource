// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MiniShopApp.Data.Concrete.EfCore.Contexts;

#nullable disable

namespace MiniShopApp.Data.Migrations
{
    [DbContext(typeof(MiniShopAppContext))]
    [Migration("20230430064534_ProductConfigAdded")]
    partial class ProductConfigAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("MiniShopApp.Entity.Concrete.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 4, 30, 9, 45, 34, 671, DateTimeKind.Local).AddTicks(2571),
                            Description = "Telefonlar burada",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 4, 30, 9, 45, 34, 671, DateTimeKind.Local).AddTicks(2582),
                            Name = "Telefon",
                            Url = "telefon"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 4, 30, 9, 45, 34, 671, DateTimeKind.Local).AddTicks(2586),
                            Description = "Bilgisayarlar burada",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 4, 30, 9, 45, 34, 671, DateTimeKind.Local).AddTicks(2586),
                            Name = "Bilgisayar",
                            Url = "bilgisayar"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 4, 30, 9, 45, 34, 671, DateTimeKind.Local).AddTicks(2588),
                            Description = "Elektronik ürünler burada",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 4, 30, 9, 45, 34, 671, DateTimeKind.Local).AddTicks(2589),
                            Name = "Elektronik",
                            Url = "elektronik"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 4, 30, 9, 45, 34, 671, DateTimeKind.Local).AddTicks(2591),
                            Description = "Beyaz eşyalar burada",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 4, 30, 9, 45, 34, 671, DateTimeKind.Local).AddTicks(2591),
                            Name = "Beyaz Eşya",
                            Url = "beyaz-esya"
                        });
                });

            modelBuilder.Entity("MiniShopApp.Entity.Concrete.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHome")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("Properties")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 4, 30, 9, 45, 34, 671, DateTimeKind.Local).AddTicks(4858),
                            ImageUrl = "1.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = true,
                            ModifiedDate = new DateTime(2023, 4, 30, 9, 45, 34, 671, DateTimeKind.Local).AddTicks(4863),
                            Name = "IPhone 13",
                            Price = 29000m,
                            Properties = "Harika bir telefon",
                            Url = "iphone-13"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 4, 30, 9, 45, 34, 671, DateTimeKind.Local).AddTicks(4868),
                            ImageUrl = "2.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            ModifiedDate = new DateTime(2023, 4, 30, 9, 45, 34, 671, DateTimeKind.Local).AddTicks(4869),
                            Name = "Samsung S23 Plus",
                            Price = 39000m,
                            Properties = "Harika bir telefon diyorlar",
                            Url = "samsung-s23-plus"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 4, 30, 9, 45, 34, 671, DateTimeKind.Local).AddTicks(4871),
                            ImageUrl = "3.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = true,
                            ModifiedDate = new DateTime(2023, 4, 30, 9, 45, 34, 671, DateTimeKind.Local).AddTicks(4872),
                            Name = "Iphone 14 Pro Plus",
                            Price = 49000m,
                            Properties = "Harika bir telefon ama...",
                            Url = "iphone-14-pro-plus"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 4, 30, 9, 45, 34, 671, DateTimeKind.Local).AddTicks(4874),
                            ImageUrl = "4.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            ModifiedDate = new DateTime(2023, 4, 30, 9, 45, 34, 671, DateTimeKind.Local).AddTicks(4875),
                            Name = "Huawei Mate 20D",
                            Price = 21000m,
                            Properties = "Fiyat/Performans ürünü",
                            Url = "huawei-mate-20d"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 4, 30, 9, 45, 34, 671, DateTimeKind.Local).AddTicks(4877),
                            ImageUrl = "5.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = true,
                            ModifiedDate = new DateTime(2023, 4, 30, 9, 45, 34, 671, DateTimeKind.Local).AddTicks(4878),
                            Name = "Vestel NFR 7500",
                            Price = 23000m,
                            Properties = "Nofrost",
                            Url = "vestel-nfr-7500"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 4, 30, 9, 45, 34, 671, DateTimeKind.Local).AddTicks(4880),
                            ImageUrl = "6.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            ModifiedDate = new DateTime(2023, 4, 30, 9, 45, 34, 671, DateTimeKind.Local).AddTicks(4881),
                            Name = "Arçelik AR8000 Toz Torbasız",
                            Price = 7000m,
                            Properties = "Toz torbasına son",
                            Url = "arcelik-ar8000-toz-torbasiz"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2023, 4, 30, 9, 45, 34, 671, DateTimeKind.Local).AddTicks(4883),
                            ImageUrl = "7.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            ModifiedDate = new DateTime(2023, 4, 30, 9, 45, 34, 671, DateTimeKind.Local).AddTicks(4883),
                            Name = "Arzum Okka Türk Kahvesi Makinesi",
                            Price = 1300m,
                            Properties = "Türk kahvesini dünyaya tanıtan marka",
                            Url = "arzum-okka-turk-kahvesi-makinesi"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2023, 4, 30, 9, 45, 34, 671, DateTimeKind.Local).AddTicks(4885),
                            ImageUrl = "8.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = true,
                            ModifiedDate = new DateTime(2023, 4, 30, 9, 45, 34, 671, DateTimeKind.Local).AddTicks(4886),
                            Name = "Macbook Air M2 16 Gb",
                            Price = 24500m,
                            Properties = "Daha güçlü",
                            Url = "macbook-air-m2-16-gb"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2023, 4, 30, 9, 45, 34, 671, DateTimeKind.Local).AddTicks(4888),
                            ImageUrl = "9.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            ModifiedDate = new DateTime(2023, 4, 30, 9, 45, 34, 671, DateTimeKind.Local).AddTicks(4889),
                            Name = "Asus Zenbook 12X",
                            Price = 22000m,
                            Properties = "Fan mı? O da ne?",
                            Url = "asus-zenbook-12x"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2023, 4, 30, 9, 45, 34, 671, DateTimeKind.Local).AddTicks(4891),
                            ImageUrl = "10.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            ModifiedDate = new DateTime(2023, 4, 30, 9, 45, 34, 671, DateTimeKind.Local).AddTicks(4891),
                            Name = "Dell TRE Amd Ryzen",
                            Price = 26500m,
                            Properties = "32 Gb Ram",
                            Url = "dell-tre-amd-ryzen"
                        });
                });

            modelBuilder.Entity("MiniShopApp.Entity.Concrete.ProductCategory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("MiniShopApp.Entity.Concrete.ProductCategory", b =>
                {
                    b.HasOne("MiniShopApp.Entity.Concrete.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiniShopApp.Entity.Concrete.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MiniShopApp.Entity.Concrete.Category", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("MiniShopApp.Entity.Concrete.Product", b =>
                {
                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
